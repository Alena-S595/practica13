# Импорт всех компонентов из библиотеки tkinter для создания GUI
from tkinter import *
# Импорт модуля messagebox для отображения сообщений об ошибках
from tkinter import messagebox
# Импорт модуля random для генерации случайных чисел
import random

# Основная функция для генерации чисел и поиска максимального кратного 3
def generate_and_find():
    try:
        # Генерация списка из 10 случайных чисел от 1 до 100
        # Используем list comprehension для компактной записи
        numbers = [random.randint(1, 100) for _ in range(10)]
        
        # Поиск максимального числа, кратного 3:
        # 1. Создаем генератор для чисел, кратных 3 (num % 3 == 0)
        # 2. Используем функцию max() для поиска максимального
        # 3. Параметр default=None на случай, если таких чисел нет
        max_multiple_of_three = max((num for num in numbers if num % 3 == 0), default=None)
        
        # Обновление интерфейса:
        # Выводим сгенерированные числа в первое текстовое поле
        numbers_label.config(text=f"Сгенерированные числа: {numbers}")
        
        # Проверяем, найдено ли число, кратное 3
        if max_multiple_of_three is not None:
            # Если найдено - выводим результат
            result_label.config(text=f"Максимальное число, кратное трём: {max_multiple_of_three}")
        else:
            # Если не найдено - сообщаем об этом
            result_label.config(text="Нет чисел, кратных трём.")
    except Exception as e:
        # Обработка возможных ошибок с выводом сообщения
        messagebox.showerror("Ошибка", f"Произошла ошибка: {e}")

# Создание главного окна приложения
root = Tk()
# Установка заголовка окна
root.title("Поиск максимального числа, кратного трём")
# Установка размеров окна (ширина x высота)
root.geometry("400x200")

# Создание и размещение элементов интерфейса:

# Текстовое поле для вывода сгенерированных чисел
# font=("Arial", 12) - задаем шрифт Arial размером 12 пунктов
numbers_label = Label(root, text="Сгенерированные числа: ", font=("Arial", 12))
# Размещаем с отступом 10 пикселей сверху и снизу
numbers_label.pack(pady=10)

# Текстовое поле для вывода результата поиска
result_label = Label(root, text="Максимальное число, кратное трём: ", font=("Arial", 12))
result_label.pack(pady=10)

# Кнопка для запуска генерации и поиска
# command=generate_and_find - привязываем функцию-обработчик
generate_button = Button(root, text="Сгенерировать и найти", command=generate_and_find, font=("Arial", 12))
# Размещаем с увеличенным отступом (20 пикселей)
generate_button.pack(pady=20)

# Запуск главного цикла обработки событий
root.mainloop()
